<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"	   
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
	   xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	   xmlns:cxf="http://cxf.apache.org/core"
	   xmlns:simple="http://cxf.apache.org/simple" 
	   xmlns:http-conf="http://cxf.apache.org/transports/http/configuration"
	   xsi:schemaLocation="http://cxf.apache.org/jaxws 
	   					   http://cxf.apache.org/schemas/jaxws.xsd
	   					   http://cxf.apache.org/jaxrs 
	   					   http://cxf.apache.org/schemas/jaxrs.xsd
						   http://cxf.apache.org/core
						   http://cxf.apache.org/schemas/core.xsd
						   http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						   http://cxf.apache.org/transports/http/configuration 
             				http://cxf.apache.org/schemas/configuration/http-conf.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd             				
						   http://cxf.apache.org/simple
						   http://cxf.apache.org/schemas/simple.xsd"
	   default-autowire="byName" default-lazy-init="false">

	<!-- 导入CXF初始配置 -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-http.xml" />	
	
    <http-conf:conduit name="*.http-conduit">   
       <http-conf:client ConnectionTimeout="5000" ReceiveTimeout="30000"/>  
    </http-conf:conduit>
       
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:nhesbclient.properties</value>
				<value>classpath*:db.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" /> 
	</bean>





    <bean id="dataSource"  
        class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName"  
            value="com.mysql.jdbc.Driver" />  
        <property name="url" value="${db.url}" />  
        <property name="username" value="${db.user}" />  
        <property name="password" value="${db.pass}" />  
    </bean>     
  
      
    
	<!-- 配置微服务全局变量（使用微服务dao时必须配置） -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name = "dataSource" ref="dataSource"/>
    </bean>
    <bean class="com.nh.micro.db.MicroDbHolder" lazy-init="false">
        <property name="dbHolder">
            <map>
                <entry>
                    <key>
                        <value>default</value>
                    </key>
                    <ref bean="jdbcTemplate"></ref></entry>
            </map>
        </property>
    </bean> 
    
	<!-- 固化controller层处理对象 -->
	<bean id="wsGroovyCmdHandler" class="com.project.frame.handler.WsGroovyCmdHandler"/>
	
    <!-- 配置platform transaction manager-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--micro 声明式事物管理，配置事物管理advice-->
    <tx:advice id="txAdviceMicro" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="execHandler" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    
    <!--micro 配置事物管理advice作用范围与作用条件-->
    <aop:config>
        <aop:pointcut id="serviceLayerTransactionMicro" expression="execution( * com.project.frame.handler.*..*(..))"/>
        <aop:advisor pointcut-ref="serviceLayerTransactionMicro" advice-ref="txAdviceMicro"/>
    </aop:config>    
	


	<!-- groovy启动加载 -->
	<bean class="com.nh.micro.rule.engine.core.GroovyInitUtil" init-method="initGroovy" lazy-init="false">
		<property name="fileList">
			<list>
				<bean class="com.nh.micro.rule.engine.core.GFileBean">
				<property name="ruleStamp" value="true"></property>
				<property name="jarFileFlag" value="true"></property>
				<property name="dirFlag" value="true"></property>
				<property name="rulePath" value="/groovy/"></property>
				</bean>
			</list>
		</property>
	</bean>

	<!-- 定时更新groovy -->
	<bean id="groovyLoadTimer" class="com.nh.micro.rule.engine.core.GroovyLoadTimer" />
	 
	<bean id="groovyLoadTimerDitail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	<property name="targetObject" ref="groovyLoadTimer"></property>
	<property name="targetMethod" value="doJob"></property>
	</bean>
	
	
	<bean id="groovyLoadTimerTigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
	<property name="jobDetail" ref="groovyLoadTimerDitail"></property>
	<property name="cronExpression">
	<value>0/5 * * * * ?</value>
	</property>
	</bean>
	
	<!-- 启动定时器 -->
	<bean id="startJob" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"  autowire="no">
	<property name="triggers">
	<list>
	<ref bean="groovyLoadTimerTigger"/>
	</list>
	</property>
	</bean>   	
    <bean class="com.project.util.xa.XADataSourceHolder" init-method="init">
        <property name="holderMap">
            <map>
            </map>
        </property>    
    </bean>
</beans>
